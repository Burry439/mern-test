{"version":3,"sources":["reducers/ItemReducer.js","reducers/index.js","actions/types.js","store.js","components/AppNavbar.js","actions/ItemActions.js","components/ShoppingList.js","components/ItemModal.js","App.js","serviceWorker.js","index.js"],"names":["initialState","items","loading","combineReducers","item","state","arguments","length","undefined","action","type","Object","objectSpread","payload","filter","_id","concat","toConsumableArray","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","window","__REDUX_DEVTOOLS_EXTENSION__","AppNavbar","isOpen","toggle","_this","setState","react_default","a","createElement","reactstrap_es","color","dark","expand","className","href","onClick","this","navbar","React","Component","setItemsLoading","ShoppingList","onDeleteClick","id","console","log","props","deleteItem","getItems","_this2","react_transition_group","map","_ref","name","key","timeout","classNames","size","bind","connect","dispatch","axios","get","then","res","data","delete","ItemModal","modal","onChange","e","defineProperty","target","value","onSubmit","preventDefault","newItem","addItem","style","marginBottom","for","placeholder","marginTop","block","post","App","es","components_AppNavbar","components_ItemModal","components_ShoppingList","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.27acb995.chunk.js","sourcesContent":["import {GET_ITEMS, ADD_ITEM , DELETE_ITEM, ITEMS_LOADING} from '../actions/types'\r\n\r\n\r\nconst initialState = \r\n{\r\n    items : [],\r\n    loading : false\r\n}\r\n\r\n\r\nexport default (state = initialState, action) =>\r\n{\r\n        switch(action.type)\r\n        {\r\n            case GET_ITEMS :\r\n                return {\r\n                    ...state,\r\n                    items : action.payload,\r\n                    loading : false\r\n                };\r\n\r\n            case DELETE_ITEM :\r\n            return {\r\n               ...state,\r\n                items : state.items.filter(item => item._id !== action.payload)\r\n            }\r\n\r\n\r\n            case ADD_ITEM :\r\n                return{\r\n                    ...state,\r\n                    items : [action.payload, ...state.items]\r\n\r\n                }\r\n\r\n\r\n            case ITEMS_LOADING:\r\n                return {\r\n                    ...state,\r\n                    loading : true\r\n                }\r\n                \r\n\r\n            default :\r\n                return state\r\n        }\r\n}","import {combineReducers} from 'redux'\r\nimport ItemReducer from './ItemReducer'\r\n\r\n\r\nexport default combineReducers({\r\n    item : ItemReducer\r\n})","export const GET_ITEMS = 'GET_ITEM'\r\nexport const ADD_ITEM = 'ADD_ITEM'\r\nexport const DELETE_ITEM = 'DELETE_ITEM'\r\nexport const ITEMS_LOADING = \"ITEMS_LOADING\"","import {createStore, applyMiddleware, compose} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport rootReducer from './reducers'\r\n\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(rootReducer, initialState, compose(\r\n    applyMiddleware(...middleware),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store","import React from 'react'\r\nimport {\r\n    Collapse,\r\n    Navbar,\r\n    NavbarToggler,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    Container\r\n} from 'reactstrap'\r\n\r\n\r\nclass AppNavbar extends React.Component\r\n{\r\n    state = {isOpen : false}\r\n\r\n\r\n    toggle = () => \r\n    {\r\n        this.setState({isOpen : !this.state.isOpen})\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\r\n                    <Container>\r\n                        <NavbarBrand href='/'>Shopping List</NavbarBrand>\r\n                        <NavbarToggler onClick={this.toggle}/>\r\n                        <Collapse isOpen={this.state.isOpen} navbar>\r\n                            <Nav className=\"ml-auto\" navbar>\r\n                                <NavItem>\r\n                                    <NavLink href=\"#\">\r\n                                        Github\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default AppNavbar\r\n","import {GET_ITEMS, ADD_ITEM , DELETE_ITEM,ITEMS_LOADING} from './types'\r\nimport axios from 'axios'\r\n\r\n\r\nexport const getItems = () => dispatch => \r\n{\r\n    dispatch(setItemsLoading())\r\n    axios.get('/api/items/')\r\n    .then(res => \r\n        dispatch({type : GET_ITEMS, payload : res.data}))\r\n}\r\n\r\n\r\nexport const deleteItem = (id) => dispatch =>\r\n{   \r\n    \r\n    axios.delete(`/api/items/${id}`)\r\n    .then(res => {\r\n        dispatch({\r\n            type: DELETE_ITEM,\r\n            payload : id\r\n        })\r\n    })\r\n   \r\n}\r\n\r\n\r\nexport const addItem = (item) => dispatch =>\r\n{   \r\n    axios.post('/api/items/', item)\r\n    .then(res => dispatch({type : ADD_ITEM, payload : res.data}))\r\n}\r\n\r\nexport const setItemsLoading = () =>\r\n{   \r\n    \r\n    return {\r\n        type : ITEMS_LOADING\r\n    }\r\n}","import React from 'react'\r\nimport {Container, ListGroup, ListGroupItem, Button} from 'reactstrap'\r\nimport {CSSTransition, TransitionGroup} from 'react-transition-group'\r\nimport {connect} from 'react-redux'\r\nimport {getItems, deleteItem} from '../actions/ItemActions'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nclass ShoppingList extends React.Component\r\n{\r\n\r\n    componentDidMount()\r\n    {\r\n        this.props.getItems()\r\n    }\r\n\r\n   onDeleteClick = (id) =>\r\n   {    \r\n       console.log(id)\r\n       this.props.deleteItem(id)\r\n   }\r\n\r\n\r\n\r\n    render()\r\n    {   \r\n        const {items} = this.props.item\r\n        return (\r\n            <Container>\r\n                \r\n                <ListGroup>\r\n                    <TransitionGroup className=\"shopping-list\">\r\n                        {items.map(({_id,name}) => (\r\n                            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\r\n                                <ListGroupItem>\r\n                                    <Button className='remove-btn' \r\n                                        color=\"danger\" \r\n                                        size=\"sm\" \r\n                                        onClick={this.onDeleteClick.bind(this,_id)}>\r\n                                        &times;\r\n                                    </Button>\r\n                                    {name}\r\n                                </ListGroupItem>\r\n                            </CSSTransition>\r\n                        ))}\r\n                    </TransitionGroup>\r\n                </ListGroup>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nShoppingList.propTypes = \r\n{\r\n    getItems: PropTypes.func.isRequired,\r\n    item : PropTypes.object.isRequired\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n({\r\n    item : state.item\r\n})\r\n\r\nexport default connect(mapStateToProps, {getItems, deleteItem})(ShoppingList)","import React from 'react'\r\nimport {ModalBody, ModalHeader, Modal, Button, Form, FormGroup, Label, Input} from 'reactstrap'\r\nimport {connect} from 'react-redux'\r\nimport {addItem} from '../actions/ItemActions'\r\n\r\n\r\nclass ItemModal extends React.Component\r\n{\r\n    state =\r\n    {\r\n        modal: false,\r\n        name : ''\r\n    }\r\n\r\n    toggle = () => \r\n    {\r\n        this.setState({modal : !this.state.modal})\r\n    }\r\n\r\n    onChange = (e) =>\r\n    {\r\n        this.setState({[e.target.name] : e.target.value})\r\n    }\r\n\r\n    onSubmit = (e) =>\r\n    {\r\n        e.preventDefault()\r\n        const newItem = \r\n        {\r\n            name : this.state.name\r\n        }\r\n        this.props.addItem(newItem)\r\n        this.toggle()\r\n    }\r\n\r\n    render()\r\n    {\r\n        return(\r\n            <div>\r\n                <Button\r\n                color=\"dark\"\r\n                style={{marginBottom: '2rem'}}\r\n                onClick={this.toggle}\r\n                >Add Item    \r\n                </Button>\r\n\r\n                <Modal\r\n                isOpen={this.state.modal}\r\n                toggle={this.toggle}\r\n                >\r\n                    <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\r\n                    <ModalBody>\r\n                        <Form onSubmit={this.onSubmit}>\r\n                            <FormGroup>\r\n                                <Label for=\"item\">Item</Label>\r\n                                <Input\r\n                                type=\"text\"\r\n                                name=\"name\"\r\n                                id=\"item\"\r\n                                placeholder=\"Add Shopping Item\"\r\n                                onChange={this.onChange}\r\n                                />\r\n                                <Button\r\n                                color=\"dark\"\r\n                                style={{marginTop: '2rem'}}\r\n                                block\r\n                                >Add Item</Button>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) =>\r\n({\r\n    item : state.item\r\n})\r\n\r\nexport default connect(mapStateToProps,{addItem})(ItemModal)\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './App.css';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport AppNavbar from './components/AppNavbar';\nimport ShoppingList from './components/ShoppingList';\nimport ItemModel from './components/ItemModal'\nimport {Container} from 'reactstrap'\n\n\nclass App extends Component {\n  render() {\n    return (\n       <Provider store={store}>\n          <div className=\"App\">\n              <AppNavbar/>\n              <Container>\n                  <ItemModel/>\n                  <ShoppingList/>\n              </Container>\n          </div>\n      </Provider>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}